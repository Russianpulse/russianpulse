
variables:
  DOCKER_DRIVER: overlay

services:
  - docker:dind

stages:
  - test
  - build
  - deploy

test:
  ruby:2.3.1
  stage: test
  variables:
    RAILS_ENV: test
  script:
    - bundle install
    - bundle exec bundle-audit check --update
    - bundle exec rubocop

    - bundle exec rake db:create db:migrate
    - bundle exec rspec

build:
  stage: build
  image: docker:17.03.1-ce
  only:
    - master
  variables:
    IMAGE_TAG_BRANCH: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    IMAGE_TAG_HASH: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

  script:

    - docker build -f Dockerfile -t $IMAGE_TAG_HASH .
    - docker push $IMAGE_TAG_HASH

    - docker build -f Dockerfile -t $IMAGE_TAG_BRANCH .
    - docker push $IMAGE_TAG_BRANCH

deploy:
  stage: deploy
  image: debian:jessie
  only:
    - master

  before_script:
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use a CentOS-based image)
    - 'which ssh-agent || ( apt-get update && apt-get install -y openssh-client )'

    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa

    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  script:
    - ssh root@185.58.205.213 "cd /my-cluster && git pull && docker-compose pull web"
    - ssh root@185.58.205.213 "cd /my-cluster && git pull && docker-compose run --rm web update"
    - ssh root@185.58.205.213 "cd /my-cluster && git pull && make"
