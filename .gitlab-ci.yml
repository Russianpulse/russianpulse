image: docker:stable

services:
  - docker:dind

variables:
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_DRIVER: overlay2

before_script:

stages:
  - build
  - test
  - deploy

rubocop:
  stage: build
  image: ruby
  script:
    - gem install rubocop -v '0.57.2'
    - rubocop

audit:
  stage: build
  image: ruby:slim
  script:
    - gem install bundler-audit
    - bundle-audit check --update

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_PIPELINE_IID --tag $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME-$CI_PIPELINE_IID --tag $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME --tag test-image -f Dockerfile .
    - docker push $CONTAINER_IMAGE:$CI_PIPELINE_IID
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME-$CI_PIPELINE_IID
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME

spec:
  stage: test
  image: udalov/docker-and-compose
  script:
    - docker-compose -f docker-compose.test.yml up -d db

    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $CONTAINER_IMAGE:$CI_PIPELINE_IID
    - docker build --cache-from $CONTAINER_IMAGE:$CI_PIPELINE_IID --tag test-image .

    - docker-compose -f docker-compose.test.yml run app spec

latest:
  stage: deploy
  only:
    - master
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $CONTAINER_IMAGE:$CI_PIPELINE_IID
    - docker build --cache-from $CONTAINER_IMAGE:$CI_PIPELINE_IID --tag $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:latest

latest-slim:
  stage: deploy
  only:
    - master
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $CONTAINER_IMAGE:latest-slim || true
    - docker build --cache-from $CONTAINER_IMAGE:latest-slim --tag $CONTAINER_IMAGE:latest-slim .
    - docker push $CONTAINER_IMAGE:latest-slim
