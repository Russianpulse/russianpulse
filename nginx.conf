#daemon off;
worker_processes	1;

events {
	worker_connections	1024;
	# worker_processes and worker_connections allows you to calculate maxclients value: 
	# max_clients = worker_processes * worker_connections

  # Будет принимать максимально возможное количество соединений 
  multi_accept on;
}

http {
	include			 mime.types;
	# anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

	default_type	application/octet-stream;


	sendfile				on;
	# If serving locally stored static files, sendfile is essential to speed up the server,
	# But if using as reverse proxy one can deactivate it
		
  # Будет отправлять заголовки и и начало файла в одном пакете 
  tcp_nodelay on;
  tcp_nopush on;

	# timeout during which a keep-alive client connection will stay open.
	keepalive_timeout	65;
  keepalive_requests 100;

  # Если клиент перестал читать отвечать, Nginx будет сбрасывать соединение с ним
  reset_timedout_connection on;

  # Будет ждать 10 секунд тело запроса от клиента, после чего сбросит соединение 
  client_body_timeout 10;

  # Если клиент прекратит чтение ответа, Nginx подождет 2 секунды и сбросит соединение 
  send_timeout 2;

  client_max_body_size 1m;

  gzip on;
  gzip_disable "msie6";
  gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;


  proxy_cache_path /var/cache/nginx/rupulse levels=1:2 keys_zone=rupulse:10m max_size=200m
                   inactive=60m use_temp_path=off;

	server {
		listen			 80;

		location / {
      proxy_cache rupulse;
      proxy_cache_revalidate on;
      proxy_cache_min_uses 3;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503
                            http_504;
      proxy_cache_lock on;

			proxy_pass http://web:80;

			proxy_set_header	X-Real-IP				$remote_addr;
			proxy_set_header	X-Forwarded-For	$proxy_add_x_forwarded_for;
			proxy_set_header	Host						 $http_host;
			proxy_redirect		off;
		}
	}
}
