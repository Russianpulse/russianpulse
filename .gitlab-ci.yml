variables:
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_DRIVER: overlay2

before_script:

stages:
  - setup
  - test
  - build
  - deploy

rubocop:
  stage: test
  image: udalov/rubocop:0.67.2
  script:
    - rubocop

audit:
  stage: test
  image: ruby:slim
  before_script:
    - gem install bundle-audit
  script:
    - bundle-audit check --update

spec:
  stage: test
  image: $IMAGE:base

  variables:
    RAILS_ENV: test
    DATABASE_URL: postgresql://postgres@postgres/test
    MEMCACHED_URL: memcached
    RAILS_MAX_THREADS: 16
    CAPYBARA_DRIVER: firefox

  services:
    - memcached
    - postgres:9-alpine
    - redis:alpine

  before_script:
    - bundle install
    - bundle exec rake db:create db:migrate
    - yarn install

  script:
    - bundle exec rspec

build-image:
  stage: build
  only:
    - master

  image: docker:stable

  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $IMAGE:latest || true
  script:
    - docker build --cache-from $IMAGE:latest --tag $IMAGE:$CI_PIPELINE_ID --tag $IMAGE:latest .
    - docker push $IMAGE:CI_PIPELINE_ID
    - docker push $IMAGE:latest

deploy:
  stage: deploy
  only:
    - master

  when: manual

  image: alpine
  script:
    - apk add --no-cache openssh

    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" > ~/.ssh/id_rsa
    - echo "$SSH_CONFIG" > ~/.ssh/config
    - chmod 600 ~/.ssh/*

    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa


    - export PULL_CMD="docker pull $CONTAINER_IMAGE:$CI_PIPELINE_ID"
    - ssh root@$SWARM_MANAGER $PULL_CMD

    - export SERVICE_CMD="docker service update --image registry.gitlab.com/mazavr/mazavr:$CI_PIPELINE_ID russianpulse_web --detach=false"
    - ssh root@$SWARM_MANAGER $SERVICE_CMD

    - export SERVICE_CMD="docker service update --image registry.gitlab.com/mazavr/mazavr:$CI_PIPELINE_ID russianpulse_worker --detach=false"
    - ssh root@$SWARM_MANAGER $SERVICE_CMD



# -----------------------------------------------------------------------------
# Utils

base-image:
  stage: setup
  when: manual
  only:
    - master

  image: docker:stable

  services:
    - docker:dind

  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $IMAGE:base || true

  script:
    - docker build --cache-from $IMAGE:base --tag $IMAGE:base -f Dockerfile.base .
    - docker push $IMAGE:base
