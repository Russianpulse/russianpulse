before_script:

stages:
  - test
  - deploy

rubocop:
  stage: test
  image: ruby:2.3.1-alpine
  script:
    - gem install rubocop -v '0.46.0'
    - rubocop

bundle-audit:
  stage: test
  image: ruby:2.3.1-alpine
  script:
    - gem install bundler-audit -v '0.5.0'
    - bundle-audit

testing:
  stage: test
  image: ruby:2.3.1
  services:
    - postgres:9.4.5
  variables:
    POSTGRES_DB: mazavr_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    DB_USER: postgres
    DB_PASSWORD: postgres
    DB_HOST: postgres
  script:
    - bundle install
    - bundle exec rake db:setup
    - bundle exec rspec

deploy:
  image: debian:jessie
  stage: deploy
  script:
    - apt update
    - apt install -y openssh-client git-core

    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa

    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    #- ssh deployer@$DEPLOY_HOST "cd my-cluster && git pull && make update"
    - git remote add dokku dokku@$DEPLOY_HOST:russianpulse
    - git push dokku master
  only:
    - master
